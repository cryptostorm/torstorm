user              nginx;
worker_processes  1;
error_log  /dev/null;
pid        /var/run/nginx.pid;
events {
	worker_connections  1024;
}
http {
	include       /usr/local/nginx/conf/mime.types;
	default_type  application/octet-stream;
	access_log  /dev/null;
	sendfile        on;
	keepalive_timeout  65;
	server_tokens off;
	lua_code_cache off;
	init_by_lua '
	        handle = io.popen("echo -n $(shuf -n 1 /usr/local/nginx/conf/server-versions-2.txt)")
	        result = handle:read("*a")
	        handle:close()
	';

	error_page 404 /404.html;
	error_page 403 /403.html;

	server {
		listen 76.164.235.18:80;
		header_filter_by_lua 'ngx.header.Server = result';
		return 301 https://$host$request_uri;
	}

	server {
		listen	76.164.235.18:443;
		server_name *.onion;
		ssl on;
		ssl_certificate      bundle.crt;
		ssl_certificate_key  cert.key;
		ssl_protocols TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
		ssl_ciphers 'EECDH+aRSA+AESGCM:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
		ssl_ecdh_curve secp521r1;
		ssl_session_cache shared:SSL:10m;
		add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
		add_header X-Frame-Options DENY;
		add_header X-Content-Type-Options nosniff;
		ssl_stapling on; # Requires nginx >= 1.3.7
		ssl_stapling_verify on; # Requires nginx => 1.3.7
		header_filter_by_lua 'ngx.header.Server = result';
		location / {
        		default_type text/html;
        		content_by_lua '
				require("onion2web").handle_onion2web(".torstorm.org");
        		';
    		}
	}

	server {
		more_clear_headers 'Accept-Ranges';
		listen	76.164.235.18:443;
		server_name torstorm.org www.torstorm.org;
		ssl on;
		ssl_certificate      bundle.crt;
		ssl_certificate_key  cert.key;
		ssl_protocols TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
		ssl_ciphers 'EECDH+aRSA+AESGCM:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
		ssl_ecdh_curve secp521r1;	
		ssl_session_cache shared:SSL:10m;
		add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
		add_header X-Frame-Options DENY;
		add_header X-Content-Type-Options nosniff;
		ssl_stapling on; # Requires nginx >= 1.3.7
		ssl_stapling_verify on; # Requires nginx => 1.3.7
		root /usr/share/nginx/html;
		header_filter_by_lua 'ngx.header.Server = result';
	}
}
